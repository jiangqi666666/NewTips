<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>NewTips-parent</artifactId>
	<packaging>pom</packaging>

	<distributionManagement>
		<site>
			<id>website</id>
			<url>scp://webhost.company.com/www/website</url>
		</site>
	</distributionManagement>
	<properties>
		<file_encoding>UTF-8</file_encoding>
		<dubbo_version>2.6.2</dubbo_version>
		<spring.bom.version>3.2.17.RELEASE</spring.bom.version>
		<javassist_version>3.15.0-GA</javassist_version>
		<junit_version>4.10</junit_version>
		<skip_maven_deploy>false</skip_maven_deploy>
		<updateReleaseInfo>true</updateReleaseInfo>
		<project.build.sourceEncoding>${file_encoding}</project.build.sourceEncoding>
		<java_source_version>1.7</java_source_version>
		<java_target_version>1.7</java_target_version>
		<argline>-server -Xms64m -Xmx64m -XX:PermSize=64m -XX:MaxPermSize=64m</argline>
		<!-- maven jdk 编译插件 -->
		<maven_compiler_plugin_version>2.3.2</maven_compiler_plugin_version>
		<!-- maven 源码打包插件 -->
		<maven_source_plugin_version>2.1.1</maven_source_plugin_version>
		<!-- 生成可执行JAR包命令 maven-jar-plugin -->
		<maven_jar_plugin_version>2.3.2</maven_jar_plugin_version>
		<!-- maven 打war包插件 -->
		<maven_war_plugin_version>2.1.1</maven_war_plugin_version>
		<!-- 安装插件 -->
		<maven_install_plugin_version>2.3.1</maven_install_plugin_version>
		<!-- 发布插件 -->
		<maven_deploy_plugin_version>2.7</maven_deploy_plugin_version>
		<!-- 拷贝依赖的jar包到lib目录 -->
		<maven-dependency-plugin>2.17</maven-dependency-plugin>
		<!-- 单元测试插件 -->
		<maven-surefire-plugin_version>2.17</maven-surefire-plugin_version>

		<redis_version>2.8.1</redis_version>
		<lombok_version>1.16.4</lombok_version>
		<spring.data.version>1.3.6.RELEASE</spring.data.version>
		<log4j_version>1.2.16</log4j_version>
		<project_version>0.0.1-SNAPSHOT</project_version>
		<rabbit_version>1.3.9.RELEASE</rabbit_version>
		<castor_version>1.4.1</castor_version>
		<jaxv_version>2.2.12</jaxv_version>
		<xstream_version>1.4.9</xstream_version>
		<dom4j_version>1.6.1</dom4j_version>
		<zookeeper_version>3.4.6</zookeeper_version>
		<zkclient_version>0.1</zkclient_version>
		<kryo_version>2.24.0</kryo_version>
		<kryo-serializers_version>0.26</kryo-serializers_version>
		<mybatis_version>3.3.1</mybatis_version>
		<mybatis-spring_version>1.2.2</mybatis-spring_version>
		<sharding-jdbc>1.2.2-SNAPSHOT</sharding-jdbc>
		<mango_version>1.3.5</mango_version>
		<kafka_version>0.8.2.2</kafka_version>
		<kafka-clients_version>0.8.2.2</kafka-clients_version>
		<guava_version>19.0</guava_version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
						<index>true</index>
						<manifest>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin_version}</version>
				<configuration>
					<useSystemClassLoader>true</useSystemClassLoader>
					<forkMode>once</forkMode>
					<argLine>${argline}</argLine>
					<systemProperties>
						<!-- common shared -->
						<property>
							<name>transporter</name>
							<value>${transporter}</value>
						</property>
						<property>
							<name>serialization</name>
							<value>${serialization}</value>
						</property>
						<!-- server side -->
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>${skip_maven_deploy}</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.8.1</version>
				<configuration>
					<connectionType>connection</connectionType>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.8.1</version>
				<configuration>
					<connectionType>developerConnection</connectionType>
				</configuration>
			</plugin>
		</plugins>

		<!-- pluginManagement是表示插件声明，即你在项目中的pluginManagement下声明了插件， maven不会加载该插件，pluginManagement声明可以被继承。 -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven_compiler_plugin_version}</version>
					<configuration>
						<fork>true</fork>
						<source>${java_source_version}</source>
						<target>${java_target_version}</target>
						<encoding>${file_encoding}</encoding>
						<compilerArgs>
							<arg>-XX:MaxPermSize=512M</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven_jar_plugin_version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven_war_plugin_version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven_install_plugin_version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven_deploy_plugin_version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- dependencyManagement父项目中设置了各依赖jar包的版本，后续子项目引用这些jar时则不用设置版本 。 如果子项目在自己pom文件的dependencies又设置了这个依赖包的版本，则以子项目为准 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_2.11</artifactId>
				<version>${kafka_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka-clients_version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava_version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.29</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis_version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring_version}</version>
			</dependency>
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${dom4j_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper_version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.sgroschupf</groupId>
				<artifactId>zkclient</artifactId>
				<version>${zkclient_version}</version>
			</dependency>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxv_version}</version>
			</dependency>
			<!-- http://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream -->
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream_version}</version>
			</dependency>
			<dependency>
				<groupId>com.esotericsoftware.kryo</groupId>
				<artifactId>kryo</artifactId>
				<version>${kryo_version}</version>
			</dependency>
			<dependency>
				<groupId>de.javakaffee</groupId>
				<artifactId>kryo-serializers</artifactId>
				<version>${kryo-serializers_version}</version>
			</dependency>
			<!-- http://mvnrepository.com/artifact/org.codehaus.castor/castor-xml -->
			<dependency>
				<groupId>org.codehaus.castor</groupId>
				<artifactId>castor-xml</artifactId>
				<version>${castor_version}</version>
			</dependency>
			<!-- spring bom 可以解除spring模块中版本依赖，后续设置中不再用设置版本 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.amqp</groupId>
				<artifactId>spring-rabbit</artifactId>
				<version>${rabbit_version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-redis</artifactId>
				<version>${spring.data.version}</version>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist_version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit_version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok_version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo_version}</version>
			</dependency>
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${redis_version}</version>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j_version}</version>
			</dependency>
			<dependency>
				<groupId>com.jiangqi</groupId>
				<artifactId>NewTips-BusniessRule</artifactId>
				<version>${project_version}</version>
			</dependency>
			<dependency>
				<groupId>com.jiangqi</groupId>
				<artifactId>NewTips-Online</artifactId>
				<version>${project_version}</version>
			</dependency>
			<dependency>
				<groupId>com.jiangqi</groupId>
				<artifactId>NewTips-Util</artifactId>
				<version>${project_version}</version>
			</dependency>
			<dependency>
				<groupId>com.jiangqi</groupId>
				<artifactId>NewTips-BusniessRule-Api</artifactId>
				<version>${project_version}</version>
			</dependency>
			<dependency>
				<groupId>org.jfaster</groupId>
				<artifactId>mango</artifactId>
				<version>${mango_version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- dependencies 父项目在此处设置的依赖jar，子项目可自动继承，不用再设置 -->
	<dependencies>
		<!-- <dependency> <groupId>com.typesafe.akka</groupId> <artifactId>akka-actor_2.10</artifactId> 
			<version>2.3.1</version> </dependency> <dependency> <groupId>com.typesafe.akka</groupId> 
			<artifactId>akka-remote_2.10</artifactId> <version>2.3.1</version> </dependency> 
			<dependency> <groupId>com.google.protobuf</groupId> <artifactId>protobuf-java</artifactId> 
			<version>2.5.0</version> </dependency> <dependency> <groupId>com.typesafe.akka</groupId> 
			<artifactId>akka-testkit_2.10</artifactId> <version>2.3.1</version> </dependency> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
	</dependencies>

	<!--项目的问题管理系统(Bugzilla, Jira, Scarab,或任何你喜欢的问题管理系统)的名称和URL -->
	<issueManagement>
		<system>aaaa</system>
		<url>url</url>
	</issueManagement>

	<!--软件配置管理插件的配置信息，供maven-scm-plugin使用（下面是用svn的配置） -->
	<scm>
		<connection>scm:svn:http://somerepository.com/svn_repo/trunk</connection>
		<developerConnection>scm:svn:https://somerepository.com/svn_repo/trunk</developerConnection>
		<url>scm:svn:http://somerepository.com/svn_repo/trunk</url>
	</scm>

	<!-- 开发人员 -->
	<developers>
		<developer>
			<name>jiangqi</name>
			<id>jiangqi</id>
			<email>366497438@qq.com</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
	</developers>
	<modules>
		<module>NewTips-Util</module>
		<module>NewTips-BusniessRule-Api</module>
		<module>NewTips-Online</module>
		<module>NewTips-BusniessRule</module>
		<module>NewTips-test</module>
    <module>NewTips-log</module>
  </modules>
	<groupId>com.jiangqi</groupId>
	<version>${project_version}</version>
</project>
